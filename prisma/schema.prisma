// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  name         String
  email        String   @unique
  passwordHash String
  role         Role     @default(TRIAL)
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  Orders Order[]

  @@map("users")
}

enum Role {
  TRIAL
  ADMIN
  VENDOR
  DELIVERY
}

model Customer {
  id        String   @id @default(uuid())
  name      String
  email     String?  @unique
  phone     String
  adress    String
  createdAt DateTime @default(now()) @map("created_at")

  Orders Order[]

  @@map("customers")
}

model Order {
  id         String      @id @default(uuid())
  customerId String      @map("customer_id")
  vendorId   String      @map("vendor_id")
  totalPrice Int         @map("total_price")
  status     OrderStatus @default(PENDING)
  createdAt  DateTime    @default(now()) @map("created_at")
  updatedAt  DateTime?   @updatedAt @map("updated_at")

  Vendor   User     @relation(fields: [vendorId], references: [id])
  customer Customer @relation(fields: [customerId], references: [id])

  @@map("orders")
}

enum OrderStatus {
  PENDING
  PREPARING
  DELIVERING
  COMPLETED
  CANCELED
}
